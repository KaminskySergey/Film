{"version":3,"file":"static/js/795.cfd5fd34.chunk.js","mappings":"qSAEaA,EAAOC,EAAAA,GAAAA,GAAH,8MAgBJC,EAAMD,EAAAA,GAAAA,IAAH,0EAgBHE,GAXUF,EAAAA,GAAAA,IAAH,8JAWOA,EAAAA,GAAAA,IAAH,oMAcXG,EAAOH,EAAAA,GAAAA,EAAH,+DAKJI,EAAOJ,EAAAA,GAAAA,EAAH,uD,mBCZjB,EAtCiB,SAAC,GAAc,IAAbK,EAAY,EAAZA,OAEf,OACI,+BAEA,SAAC,KAAD,CACFC,aAAc,GACdC,cAAe,GACfC,cAAe,kBAAMC,QAAQC,IAAI,eAAlB,EACfC,SAAU,SAACC,GAAD,OAAYH,QAAQC,IAAIE,EAAxB,EACVC,WAAY,CACVC,OAAQ,QACRC,OAAQ,SAPR,SAUOV,EAAOW,KAAI,SAACC,GAAD,OACR,SAAC,KAAD,WACI,SAAClB,EAAD,WACQ,4BACA,SAACE,EAAD,CAAKiB,IAAMD,EAAGE,aAAJ,0CAAiEF,EAAGE,cAAjDC,EAAiEC,IAAKJ,EAAGK,QAEtG,UAACpB,EAAD,YACI,SAACC,EAAD,UAAOc,EAAGK,QACV,SAAClB,EAAD,UAAOa,EAAGM,mBANVN,EAAGO,KADDP,EAAGO,GADb,OAqBzB,ECrCaC,EAAOzB,EAAAA,GAAAA,GAAH,yHCkClB,EA9BiB,SAAC,GAAkB,IAAjB0B,EAAgB,EAAhBA,WACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOtB,EAAP,KAAeuB,EAAf,KACOC,GAAYC,EAAAA,EAAAA,MAAZD,SAeP,IAdAE,EAAAA,EAAAA,YAAU,WACN,IACI,IAAMC,EAAe,mCAAG,sGACCC,EAAAA,EAAAA,IAAA,6CAAgDJ,EAAhD,qEADD,gBACbK,EADa,EACbA,KACPN,EAAUM,EAAKC,MAFK,2CAAH,qDAIrBH,GAGH,CAFC,SAED,CACJ,GAAE,CAACH,IAIiB,IAAlBxB,EAAO+B,OAGV,OACI,8BACCV,IACD,SAACD,EAAD,WACI,SAAC,EAAD,CAAWpB,OAAQA,OAI9B,C,+2FClCc,SAASgC,EAAuBC,EAASC,GAItD,OAHKA,IACHA,EAAMD,EAAQE,MAAM,IAEfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["pages/MoviesDetails/Cast/CastItem.styled.js","pages/MoviesDetails/Cast/CastItem.jsx","pages/MoviesDetails/Cast/CastList.styled.js","pages/MoviesDetails/Cast/CastList.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Item = styled.li`\nposition: relative;\nwidth: 100px;\nheight: 150px;\ntransition: all 250ms;\ncursor: pointer;\n\n&:hover, &:focus {\n    transform: scale(0.9);\n    border: 3px solid gold;\n}\n\n\n\n`\n\nexport const Img = styled.img`\nmax-width: 100%;\ndisplay: block;\nheight: auto;\n`\nexport const Raiting = styled.div`\nbackground-color: red;\nposition: absolute;\ntop: 0;\nleft: 0;\n& p {\n    font-size: 12px;\n    padding: 4px;\n    color: white;\n}\n`\nexport const Description = styled.div`\nposition: absolute;\nbottom: 0;\nleft: 0;\nwidth: 100%;\nbackground-color: rgba(000,000,000, 0.9);\ncolor: white;\npadding: 5px;\n& p {\n    text-align: center;\n    \n}\n`\n\nexport const Name = styled.p`\nfont-size: 12px;\nmargin-bottom: 4px;\n`\n\nexport const Role = styled.p`\nfont-size: 12px;\ncolor: red;\n`\n\n","import { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Img, Description, Item, Name, Role } from \"./CastItem.styled\";\nimport notImage from './not-image.png'\nconst CastItem = ({actors}) => {\n    \n    return (\n        <>\n        \n        <Swiper\n      spaceBetween={50}\n      slidesPerView={10}\n      onSlideChange={() => console.log('slide change')}\n      onSwiper={(swiper) => console.log(swiper)}\n      navigation={{\n        prevEl: '.prev',\n        nextEl: '.next',\n      }}>\n              \n              {actors.map((el) => (\n                  <SwiperSlide key={el.id}>\n                      <Item  key={el.id}>\n                              <div>\n                              <Img src={!el.profile_path ? notImage : `https://image.tmdb.org/t/p/w200/${el.profile_path}`} alt={el.name} />\n                              \n                              <Description>\n                                  <Name>{el.name}</Name>\n                                  <Role>{el.character}</Role>\n                              </Description>\n                              </div>\n                          \n                      </Item>\n                      </SwiperSlide>\n                  \n              ))}\n\n              </Swiper>\n        \n        </>\n    )\n}\n\nexport default CastItem;","import styled from \"styled-components\";\n\nexport const  List = styled.ul`\nwidth: 1000px;\nmargin-top: 16px;\n\n& > li:not(:first-child){\n    margin-left: 16px;\n    \n}\n`","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CastItem from \"./CastItem\";\nimport { List } from \"./CastList.styled\";\n\nconst CastList = ({isOpenCast}) => {\n    const [actors, setActors] = useState([])\n    const {moviesId} = useParams()\n    useEffect(() => {\n        try{\n            const fetchDataActors = async () => {\n                const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${moviesId}/credits?api_key=102d4305e0abdbf0fd48836d5abb1978&language=en-US`)\n                setActors(data.cast)\n            }\n            fetchDataActors()\n        } catch {\n\n        }\n    }, [moviesId])\n\n    \n\n    if(actors.length === 0){\n        return\n    }\n    return (\n        <>\n        {isOpenCast && \n        <List>\n            <CastItem  actors={actors}/>\n        </List>}\n        </>\n    )\n}\n\nexport default CastList;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Item","styled","Img","Description","Name","Role","actors","spaceBetween","slidesPerView","onSlideChange","console","log","onSwiper","swiper","navigation","prevEl","nextEl","map","el","src","profile_path","notImage","alt","name","character","id","List","isOpenCast","useState","setActors","moviesId","useParams","useEffect","fetchDataActors","axios","data","cast","length","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}